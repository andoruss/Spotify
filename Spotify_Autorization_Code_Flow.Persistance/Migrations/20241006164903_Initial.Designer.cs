// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Spotify_Autorization_Code_Flow.Persistance.Context;

#nullable disable

namespace Spotify_Autorization_Code_Flow.Persistance.Migrations
{
    [DbContext(typeof(ProviderDbContext))]
    [Migration("20241006164903_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Spotify_Autorization_Code_Flow.Domain.Bar", b =>
                {
                    b.Property<int>("BarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BarId"));

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uuid");

                    b.HasKey("BarId");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("Spotify_Autorization_Code_Flow.Domain.Provider", b =>
                {
                    b.Property<int>("BarId")
                        .HasColumnType("integer");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ExpiresIn")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BarId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Spotify_Autorization_Code_Flow.Domain.Provider", b =>
                {
                    b.HasOne("Spotify_Autorization_Code_Flow.Domain.Bar", "Bar")
                        .WithOne("Provider")
                        .HasForeignKey("Spotify_Autorization_Code_Flow.Domain.Provider", "BarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bar");
                });

            modelBuilder.Entity("Spotify_Autorization_Code_Flow.Domain.Bar", b =>
                {
                    b.Navigation("Provider");
                });
#pragma warning restore 612, 618
        }
    }
}
